IMPORTS {
import bank.UserInterface;
}

GLOBAL {

TRIGGERS {
deposit_en(int money) = {UserInterface f.deposit(money)entry}
deposit_ex(int money) = {UserInterface f.deposit(money)exit()}
withdraw_en(int money) = {UserInterface f.withdraw(money)entry}
withdraw_ex(int money) = {UserInterface f.withdraw(money)exit()}
}

PROPERTY prop_args_integrity {

STATES
{
STARTING { init ; }
}

TRANSITIONS
{
init -> init [withdraw_en \ money > 0 \ ]
init -> init [deposit_en \ money > 0 \ ]
}

} %%end prop_deposit

} %%end GLOBAL

TEMPLATES {
  TEMPLATE args_integrity (UserInterface ff, Trigger tr) {
     PROPERTY args_integrity_check {
       STATES {
         STARTING { init ; }
       }
       TRANSITIONS {
         init -> init [trigger ]
       }
     } %%end args_integrity_check 
  } %%end args_integrity
} %%end TEMPLATES
